version: '3.8'

services:
  # eureka service ------------------------------------------------------------------------------------------------------
  eureka:
    container_name: eureka
    build:
      context: ./infraestructure/eureka
      dockerfile: Dockerfile
      args:
        JAR_FILE: target/eureka-0.0.1-SNAPSHOT.jar
    ports:
      - "8761:8761"
    environment:
      - JAVA_OPTS=-Xms256M -Xmx256M
    networks:
      - bookmenow-network

  # gateway service -----------------------------------------------------------------------------------------------------
  gateway:
    container_name: gateway
    build:
      context: ./infraestructure/gateway
      dockerfile: Dockerfile
      args:
        JAR_FILE: target/gateway-0.0.1-SNAPSHOT.jar
    ports:
      - "8090:8090"
    environment:
      - JAVA_OPTS=-Xms256M -Xmx256M
      - SPRING_APPLICATION_JSON={"eureka":{"client":{"serviceUrl":{"defaultZone":"http://eureka:8761/eureka/"}}}}
    depends_on:
      - eureka
    networks:
      - bookmenow-network

  # user service --------------------------------------------------------------------------------------------------------
  user:
    container_name: user
    build:
      context: ./services/user
      dockerfile: Dockerfile
      args:
        JAR_FILE: target/user-0.0.1-SNAPSHOT.jar
    environment:
      - JAVA_OPTS=-Xms256M -Xmx256M
      - SPRING_APPLICATION_JSON={"eureka":{"client":{"serviceUrl":{"defaultZone":"http://eureka:8761/eureka/"}}}}
    depends_on:
      - eureka
    networks:
      - bookmenow-network

  # catalog service -----------------------------------------------------------------------------------------------------
  catalog:
    container_name: catalog
    build:
      context: ./services/catalog
      dockerfile: Dockerfile
      args:
        JAR_FILE: target/catalog-0.0.1-SNAPSHOT.jar
    environment:
      - JAVA_OPTS=-Xms256M -Xmx256M
      - SPRING_APPLICATION_JSON={"eureka":{"client":{"serviceUrl":{"defaultZone":"http://eureka:8761/eureka/"}}}}
    depends_on:
      - eureka
    networks:
      - bookmenow-network

# networks
networks:
  bookmenow-network:
    driver: bridge

# to run the compose:
# docker compose -f "C:\Users\Janus\Desktop\bookmenow\bookmenowbackend\parent\Docker-compose.yml" up -d --build --force-recreate
# before doing that:
# 1. mvn clean package spring-boot:repackage
# 2. asegúrate de que los JARs estén en las rutas target correctas de cada microservicio